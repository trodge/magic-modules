resource "google_compute_packet_mirroring" "primary" {
  collector_ilb {
    url = google_compute_forwarding_rule.second_mirroring_internal.self_link
  }

  location = "{{region}}"

  mirrored_resources {
    instances {
      url = google_compute_instance.nics.self_link
    }

    subnetworks {
      url = "projects/{{project}}/regions/{{region}}/subnetworks/default"
    }

    tags = ["tag-two"]
  }

  name = "{{mirroring}}"

  network {
    url = "projects/{{project}}/global/networks/default"
  }

  description = "An updated sample packet mirroring"
  enable      = "FALSE"

  filter {
    cidr_ranges  = ["192.168.0.0/22"]
    direction    = "EGRESS"
    ip_protocols = ["udp"]
  }

  priority = 1001
  project  = "{{project}}"
}

resource "google_compute_instance" "basic" {
  boot_disk {
    auto_delete = true

    initialize_params {
      image = "projects/debian-cloud/global/images/debian-10-buster-v20210817"
    }
  }

  machine_type = "e2-medium"
  name         = "{{instance1}}"

  network_interface {
    network = "default"
  }

  project = "{{project}}"
  zone    = "{{zone}}"
}

resource "google_compute_instance" "nics" {
  boot_disk {
    auto_delete = true

    initialize_params {
      image = "projects/debian-cloud/global/images/debian-10-buster-v20210817"
    }
  }

  machine_type = "e2-medium"
  name         = "{{instance2}}"

  network_interface {
    subnetwork = google_compute_subnetwork.minimal.self_link
  }

  network_interface {

    network = "default"
  }

  project = "{{project}}"
  zone    = "{{zone}}"
}

resource "google_compute_forwarding_rule" "first_mirroring_internal" {
  name                   = "{{rule1}}"
  all_ports              = true
  backend_service        = google_compute_region_backend_service.regional.self_link
  description            = "A test fmirror collector orwarding rule with internal load balancing scheme"
  is_mirroring_collector = true
  load_balancing_scheme  = "INTERNAL"
  network_tier           = "PREMIUM"
  project                = "{{project}}"
  region                 = "{{region}}"
}

resource "google_compute_forwarding_rule" "second_mirroring_internal" {
  name                   = "{{rule2}}"
  all_ports              = true
  backend_service        = google_compute_region_backend_service.regional.self_link
  description            = "A test mirror collector forwarding rule with internal load balancing scheme"
  is_mirroring_collector = true
  load_balancing_scheme  = "INTERNAL"
  network_tier           = "PREMIUM"
  project                = "{{project}}"
  region                 = "{{region}}"
}

resource "google_compute_region_backend_service" "regional" {
  name                  = "{{service}}"
  load_balancing_scheme = "INTERNAL"
  region                = "{{region}}"
  project               = "{{project}}"
}

resource "google_compute_subnetwork" "minimal" {
  ip_cidr_range = "10.2.0.0/16"
  name          = "{{compute-subnetwork}}"
  network       = google_compute_network.legacy.self_link
  project       = "{{project}}"
  region        = "{{region}}"
}

resource "google_compute_network" "legacy" {
  name                    = "{{compute-network}}"
  project                 = "{{project}}"
  auto_create_subnetworks = false
}
